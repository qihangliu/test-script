// jenkinsfile
pipeline {
    agent any

    stages {
        // ====================================================================
        //  阶段：构建并归档 opwb-management 项目
        // ====================================================================
        stage('Build and Archive Management Project') {
            agent {
                docker {
                    // 使用JDK 8的Maven镜像
                    image 'maven:3-eclipse-temurin-8'
                    args '-u root:root -v maven-m2-cache:/root/.m2/repository'
                }
            }
            steps {
                // 保留原始文件中的子目录隔离方式
                dir('opwb-management-workspace') {
                    // 手动执行清理命令
                    echo '正在以 root 权限强制清理工作子目录...'
                    sh 'rm -rf ./* ./.??*'

                    echo '检出 opwb-management 主项目...'
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/master']],
                        userRemoteConfigs: [[
                            url: 'https://gitee.com/changyunhuizhi/opwb-management.git',
                            credentialsId: 'd5208b73-a80f-403b-a5df-365614d1362e'
                        ]]
                    ])

                    sh "git config --global --add safe.directory ${env.WORKSPACE}/opwb-management-workspace"

                    // 使用 configFileProvider 加载全局配置
                    // 不再有 'Prepare Settings' 阶段，直接在这里加载
                    configFileProvider([configFile(fileId: 'maven-aliyun-settings', variable: 'MAVEN_SETTINGS')]) {
                        echo "INFO: 成功加载 Jenkins 全局 Maven 配置文件 (ID: maven-aliyun-settings)..."

                        echo '正在执行 Maven 构建...'
                        // 优化：使用 -T 8 启用并行构建以提速
                        sh "mvn -s ${MAVEN_SETTINGS} -T 8 clean install -DskipTests"
                    }

                    echo '正在归档文件...'
                    script {
                        def timestamp = new Date().format('yy-MM-dd_HH-mm-ss', TimeZone.getTimeZone('Asia/Shanghai'))
                        def shareRoot = "/var/jenkins_home/share"
                        def targetDir = "${shareRoot}/opwb-manage-${timestamp}"

                        sh """
                            set -e
                            mkdir -p "${targetDir}/opwb-manage"

                            git log --since="7 days ago" --no-merges --pretty=format:"%h - %an, %ar : %s" > "${targetDir}/git_commit_log.txt"

                            cp target/management-0.0.1-SNAPSHOT.jar "${targetDir}/opwb-manage/"

                            cat <<EOF

========================================================================
✅ 构建产物已成功归档!

   任务名称: opwb-manage
   时间戳:  ${timestamp}

   Windows 可通过以下路径访问：
   \\\\\\\\10.189.189.245\\\\share\\\\opwb-manage-${timestamp}
========================================================================

EOF
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo '构建流程结束，正在清理工作区...'
            cleanWs()
        }
    }
}

